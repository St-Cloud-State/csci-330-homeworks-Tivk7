Script started on 2025-02-05 22:30:02+00:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="104" LINES="14"]
[0;32m@Tivk7 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Tivk7/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ sbcl
This is SBCL 1.4.3, an implementation of ANSI Common Lisp.
More information about SBCL is available at <http://www.sbcl.org/>.

SBCL is free software, provided as is, with absolutely no warranty.
It is mostly in the public domain; some portions are provided under
BSD-style licenses.  See the CREDITS and COPYING files in the
distribution for more information.
* (third (the quick brown fox))
; in: THIRD (THE QUICK BROWN FOX)
;     (THE QUICK BROWN FOX)
; 
; caught ERROR:
;   error while parsing arguments to special operator THE:
;     too many elements in
;       (QUICK BROWN FOX)
;     to satisfy lambda list
;       (SB-C::VALUE-TYPE SB-KERNEL:FORM):
;     exactly 2 expected, but got 3
; 
; compilation unit finished
;   caught 1 ERROR condition

debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  Execution of a form compiled with errors.
Form:
  (THE QUICK BROWN FOX)
Compile-time error:
  error while parsing arguments to special operator THE:
  too many elements in
    (QUICK BROWN FOX)
  to satisfy lambda list
    (SB-C::VALUE-TYPE SB-KERNEL:FORM):
  exactly 2 expected, but got 3

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA ()))
   source: (THE QUICK BROWN FOX)
0] 0

* (third '(the quick brown fox))

BROWN
* (list 2 and 2 is 4)

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable AND is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV AND #<NULL-LEXENV>)
0] 0

* (list 2 'and 2 is  'is 4)

(2 AND 2 IS 4)
* (+ 1 '(length list    (list t t t t)))

debugger invoked on a TYPE-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The value
    (LENGTH (LIST T T T T))
  is not of type
    NUMBER
  when binding SB-KERNEL::Y

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-KERNEL:TWO-ARG-+ 1 (LENGTH (LIST T T T T))) [external]
0] 0

* (+ 1(length (list t t t t)))

5
* (cons 'patrick (seymour marvin))
; in: CONS 'PATRICK
;     (SEYMOUR MARVIN)
; 
; caught WARNING:
;   undefined variable: MARVIN
; 
; caught STYLE-WARNING:
;   undefined function: SEYMOUR
; 
; compilation unit finished
;   Undefined function:
;     SEYMOUR
;   Undefined variable:
;     MARVIN
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable MARVIN is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA ()))
   source: (SEYMOUR MARVIN)
0] 0

* (cons 'patrick '(seymour marvin))

(PATRICK SEYMOUR MARVIN)
* (cons 'patrick (list seymour marvin))

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable SEYMOUR is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV SEYMOUR #<NULL-LEXENV>)
0] 0

* (cons 'patrick ( list 'seymour 'marvin))

(PATRICK SEYMOUR MARVIN)
* (defun mystery (x) (list(second x)(first x)))

MYSTERY
* (mystery '(dancing eb  bear))

(BEAR DANCING)
* (mystery 'dance ing 'bear)

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  invalid number of arguments: 2

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(MYSTERY DANCING BEAR) [external]
   source: (SB-INT:NAMED-LAMBDA MYSTERY
               (X)
             (BLOCK MYSTERY (LIST (SECOND X) (FIRST X))))
0] 0

* my  (mystery '(zowie))

(NIL ZOWIE)
*  (defun speak (x y) (list â€™all â€™x â€™is â€™y)) you donâ€™t need the â€™ by the x and y
 (defun speak (x) (y); in: DEFUN SPEAK
;     (SB-INT:NAMED-LAMBDA SPEAK
;         (X Y)
;       (BLOCK SPEAK (LIST â€™ALL â€™X â€™IS â€™Y)))
; 
; caught STYLE-WARNING:
;   The variable X is defined but never used.
; 
; caught STYLE-WARNING:
;   The variable Y is defined but never used.
; in: DEFUN SPEAK
;     (LIST â€™ALL â€™X â€™IS â€™Y)
; 
; caught WARNING:
;   undefined variable: â€™ALL
; 
; caught WARNING:
;   undefined variable: â€™IS
; 
; caught WARNING:
;   undefined variable: â€™X
; 
; caught WARNING:
;   undefined variable: â€™Y
; 
; compilation unit finished
;   Undefined variables:
;     â€™ALL â€™IS â€™X â€™Y
;   caught 4 WARNING conditions
;   caught 2 STYLE-WARNING conditions

SPEAK
* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable YOU is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV YOU #<NULL-LEXENV>)
0]  (list â€™all x â€™is y)) the x and y need to be together like (x y)
 (defun speak ((x) (y)) (list all â€™; in: DEFUN SPEAK
;     (LIST â€™ALL X â€™IS Y)
; 
; caught WARNING:
;   undefined variable: Y

;     (Y)
; 
; caught STYLE-WARNING:
;   undefined function: Y

;     (LIST â€™ALL X â€™IS Y)
; 
; caught WARNING:
;   undefined variable: â€™ALL
; 
; caught WARNING:
;   undefined variable: â€™IS
; 
; compilation unit finished
;   Undefined function:
;     Y
;   Undefined variables:
;     Y â€™ALL â€™IS
;   caught 3 WARNING conditions
;   caught 1 STYLE-WARNING condition
WARNING: redefining COMMON-LISP-USER::SPEAK in DEFUN
SPEAK
0] x is â€™y)) the â€™ are in the wrong spots should be in front of all and is
; in: DEFUN SPEAK
;     (DEFUN SPEAK ((X) (Y)) (LIST ALL â€™X IS â€™Y))
; --> PROGN SB-IMPL::%DEFUN SB-INT:NAMED-LAMBDA 
; ==>
;   #'(SB-INT:NAMED-LAMBDA SPEAK
;         ((X) (Y))
;       (BLOCK SPEAK (LIST ALL â€™X IS â€™Y)))
; 
; caught ERROR:
;   Required argument is not a symbol: (X)
; 
; compilation unit finished
;   caught 1 ERROR condition

debugger invoked on a SB-INT:COMPILED-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  Execution of a form compiled with errors.
Form:
  #'(SB-INT:NAMED-LAMBDA SPEAK
      ((X) (Y))
    (BLOCK SPEAK (LIST ALL â€™X IS â€™Y)))
Compile-time error:
  Required argument is not a symbol: (X)

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Reduce debugger level (to debug level 1).
  1:         Exit debugger, returning to top level.

((LAMBDA (#:G390)) #<unused argument>)
   source: (DEFUN SPEAK ((X) (Y)) (LIST ALL â€™X IS â€™Y))
0[2] 0

0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable DONâ€™T is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV DONâ€™T #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable NEED is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV NEED #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable THE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV THE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™ is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV â€™ #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable BY is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV BY #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable THE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV THE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable X is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV X #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable AND is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV AND #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable Y is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV Y #<NULL-LEXENV>)
0] 0

*  (defun speak (x) (y) (list â€™all x â€™is y)) the x and y need to be together like (x y)
; in: DEFUN SPEAK
;     (LIST â€™ALL X â€™IS Y)
; 
; caught WARNING:
;   undefined variable: Y

;     (Y)
; 
; caught STYLE-WARNING:
;   undefined function: Y

;     (LIST â€™ALL X â€™IS Y)
; 
; caught WARNING:
;   undefined variable: â€™ALL
; 
; caught WARNING:
;   undefined variable: â€™IS
; 
; compilation unit finished
;   Undefined function:
;     Y
;   Undefined variables:
;     Y â€™ALL â€™IS
;   caught 3 WARNING conditions
;   caught 1 STYLE-WARNING condition
WARNING: redefining COMMON-LISP-USER::SPEAK in DEFUN

SPEAK
* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable THE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV THE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable X is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV X #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable AND is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV AND #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable Y is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV Y #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable NEED is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV NEED #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable TO is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV TO #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable BE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV BE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable TOGETHER is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV TOGETHER #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable LIKE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV LIKE #<NULL-LEXENV>)
0] 0

* ; in: X Y
;     (X Y)
; 
; caught STYLE-WARNING:
;   undefined function: X
; 
; caught WARNING:
;   undefined variable: Y
; 
; compilation unit finished
;   Undefined function:
;     X
;   Undefined variable:
;     Y
;   caught 1 WARNING condition
;   caught 1 STYLE-WARNING condition

debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable Y is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA ()))
   source: (X Y)
0] 0

*  (defun speak ((x) (y)) (list all â€™x is â€™y)) the â€™ are in the wrong spots should be in front of all and is                                                  
; in: DEFUN SPEAK
;     (SB-INT:NAMED-LAMBDA SPEAK
;         ((X) (Y))
;       (BLOCK SPEAK (LIST ALL â€™X IS â€™Y)))
; 
; caught ERROR:
;   Required argument is not a symbol: (X)

debugger invoked on a SB-INT:SIMPLE-PROGRAM-ERROR in thread
#<THREAD "main thread" RUNNING {9461061}>:
  Required argument is not a symbol: (X)

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

((LAMBDA NIL :IN SB-C::ACTUALLY-COMPILE))
0] 0
; 
; compilation unit aborted
;   caught 1 fatal ERROR condition
;   caught 1 ERROR condition

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable THE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV THE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable â€™ is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV â€™ #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable ARE is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV ARE #<NULL-LEXENV>)
0] 0

* 
debugger invoked on a UNBOUND-VARIABLE in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The variable I is unbound.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

(SB-INT:SIMPLE-EVAL-IN-LEXENV I #<NULL-LEXENV>)
0] 0

* lis   (list 'cons t nil)

(CONS T NIL)
* (eval(list 'cons t nil))

(T)
* (eval(eval(list 'cons t nil)))
; in: T
;     (T)
; 
; caught WARNING:
;   The function T is undefined, and its name is reserved by ANSI CL so that even
;   if it were defined later, the code doing so would not be portable.
; 
; compilation unit finished
;   Undefined function:
;     T
;   caught 1 WARNING condition

debugger invoked on a UNDEFINED-FUNCTION in thread
#<THREAD "main thread" RUNNING {9461061}>:
  The function COMMON-LISP:T is undefined.

Type HELP for debugger help, or (SB-EXT:EXIT) to exit from SBCL.

restarts (invokable by number or by possibly-abbreviated name):
  0: [ABORT] Exit debugger, returning to top level.

("undefined function")
0] 0

* (applu y #'cons '(t nil))

(T)
* (eval nil)

NIL
* (list 'eval nil)

(EVAL NIL)
* e (eval (list 'eval nil))

NIL
* (exit)
[0;32m@Tivk7 [0mâžœ [1;34m/workspaces/csci-330-homeworks-Tivk7/Hwork2 [0;36m([1;31mmain[0;36m) [0m$ exit
exit

Script done on 2025-02-05 22:41:03+00:00 [COMMAND_EXIT_CODE="0"]
